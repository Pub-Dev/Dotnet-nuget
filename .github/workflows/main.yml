# This is a basic workflow to help you get started with Actions

name: Build, Pack and Publish

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Restore dependencies
        run: dotnet restore ./src/PubDev.Nuget.HttpMiddleware/PubDev.Nuget.HttpMiddleware.csproj

      - name: Build
        run: dotnet build ./src/PubDev.Nuget.HttpMiddleware/PubDev.Nuget.HttpMiddleware.csproj --no-restore
        
      - name: Create the package
        if: github.ref == 'refs/heads/main'
        run: dotnet pack --configuration Release ./src/PubDev.Nuget.HttpMiddleware/PubDev.Nuget.HttpMiddleware.csproj -p:Version=1.0.${{ github.run_number }}-alpha
        
      - name: Publish the package to nuget.org
        if: github.ref == 'refs/heads/main'
        run: dotnet nuget push ./src/PubDev.Nuget.HttpMiddleware/bin/Release/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_KEY }}
